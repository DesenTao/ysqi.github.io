<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>虞双齐Go语言技术独立咨询顾问</title>
    <link>https://yushuangqi.com/tags/kingshard.xml</link>
    <description>在 虞双齐Go语言技术独立咨询顾问上关于的内容</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>devysq@gmail.com (虞双齐)</managingEditor>
    <webMaster>devysq@gmail.com (虞双齐)</webMaster>
    <atom:link href="/tags/kingshard.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>一个高性能MySQLproxy(kingshard)的性能测试报告</title>
      <link>https://yushuangqi.com/blog/2016/yi-ge-gao-xing-neng-mysql-proxykingshardde-xing-neng-ce-shi-bao-gao.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:05 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/yi-ge-gao-xing-neng-mysql-proxykingshardde-xing-neng-ce-shi-bao-gao.html</guid>
      <description>kingshard的性能测试报告 之前的几篇blog，给大家分享的都是kingshard（https://github.com/flike/kingshard )的架构与设计。其实很多人对kingshard的性能也非常关心。最近热心的网友bigpyer对kingshard做了详细的性能测试。在此分享一下。
1.测试环境 1.1服务器配置 类别 名称
OS 云主机 Ubuntu 14.04 LTS CPU Common KVM CPU @ 2.40GHz *4 RAM 8GB DISK 500GB kingshard master分支 Mysql v5.6.25 Sysbench v0.5
2.性能需求  测试通过kingshard转发SQL请求与直连DB发送SQL请求这两种情形下的性能差距。
 测试配置文件中max_conns_limit参数对kingshard的影响，并找出最优值。
  3.测试准备工作 3.1 kingshard性能测试环境搭建 利用上述配置的4台服务器搭建了一个kingshard性能测试环境：
 服务器A运行着sysbench
 服务器B运行着kingshard系统
 服务器C运行着主库
 服务器D运行着从库
  四台服务器处在同一个网段中。具体的拓扑图如下所示：
有关kingshard系统安装与配置，请参考文档安装kingshard。
有关sysbench v0.5的安装与命令选项，请参考sysbench。
4.测试过程 执行下面的命令准备测试数据
time sysbench --test=/data/home/test_user/software/sysbench/sysbench/tests/db/oltp.lua \ --mysql-host=host \ --mysql-port=9696 \ --mysql-user=kingshard \ --mysql-password=kingshard \ --mysql-db=kingshard \ --oltp-tables-count=1 \ --oltp-table-size=1000000 \ --num-threads=50 \ --max-requests=1000000 \ --report-interval=1 \ prepare  上述命令会创建表sbtest1，数据量为100w，建表语句如下:</description>
    </item>
    
    <item>
      <title>kingshard按时间分表功能介绍</title>
      <link>https://yushuangqi.com/blog/2016/kingshardan-shi-jian-fen-biao-gong-neng-jie-shao.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:55 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/kingshardan-shi-jian-fen-biao-gong-neng-jie-shao.html</guid>
      <description>kingshard按时间分表功能介绍 在文档中主要介绍了kingshard的Hash和Range方式的分表，最近又开发了按时间维度的分表方式。按时间维度分表的场景非常普遍，下面介绍一下kingshard的时间分表功能
 支持的时间类型 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;  kingshard中的分表字段支持MySQL中三种类型的时间格式
 date类型，格式：YYYY-MM-DD，例如:2016-03-04,注意：2016-3-04，2016-03-4，2016-3-4等格式kingshard都是不支持的。
 datetime类型，格式：YYYY-MM-DD HH:MM:SS，例如:2016-03-04,注意：2016-3-04 13:23:43，2016-03-4 13:23:43，2016-3-4 13:23:43等格式kingshard都是不支持的，必须严格按照规定的格式，kingshard才支持。
 timestamp类型，整数类型，例如：1457165568，对应的是：2016-3-5 16:12:48。
   支持的时间分表类型 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;  kingshard支持MySQL中三种格式的时间类型
 date类型，格式：YYYY-MM-DD，例如:2016-03-04,注意：2016-3-04，2016-03-4，2016-3-4等格式kingshard都是不支持的。
 datetime，格式：YYYY-MM-DD HH:MM:SS，例如:2016-03-04,注意：2016-3-04 13:23:43，2016-03-4 13:23:43，2016-3-4 13:23:43等格式kingshard都是不支持的，必须严格按照规定的格式，kingshard才支持。
 timestamp，整数类型。
   功能演示 &amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;  kingshard的配置文件如下所示：
# server listen addr addr : 0.0.0.0:9696 # server user and password user : kingshard password : kingshard # if set log_path, the sql log will write into log_path/sql.</description>
    </item>
    
  </channel>
</rss>