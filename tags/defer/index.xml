<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>虞双齐Go语言技术独立咨询顾问</title>
    <link>https://yushuangqi.com/tags/defer.xml</link>
    <description>在 虞双齐Go语言技术独立咨询顾问上关于的内容</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>devysq@gmail.com (虞双齐)</managingEditor>
    <webMaster>devysq@gmail.com (虞双齐)</webMaster>
    <atom:link href="/tags/defer.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>golangdefer使用小结与注意要点</title>
      <link>https://yushuangqi.com/blog/2016/golang-defer-shi-yong-xiao-jie-yu-zhu-yi-yao-dian.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:07 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/golang-defer-shi-yong-xiao-jie-yu-zhu-yi-yao-dian.html</guid>
      <description>https://segmentfault.com/a/
关于延时调用函数(Deferred Function Calls) 延时调用函数的语法如下:
defer func_name(param-list)  当一个函数调用前有关键字 defer 时, 那么这个函数的执行会推迟到包含这个 defer 语句的函数即将返回前才执行. 例如:
func main() { defer fmt.Println(&amp;quot;Fourth&amp;quot;) fmt.Println(&amp;quot;First&amp;quot;) fmt.Println(&amp;quot;Third&amp;quot;) }  最后打印顺序如下:
First Second Third  需要注意的是, defer 调用的函数参数的值 defer 被定义时就确定了.
例如:
i := 1 defer fmt.Println(&amp;quot;Deferred print:&amp;quot;, i) i++ fmt.Println(&amp;quot;Normal print:&amp;quot;, i)  打印的内容如下:
Normal print: 2 Deferred print: 1  因此我们知道, 在 &amp;ldquo;defer fmt.Println(&amp;ldquo;Deferred print:&amp;ldquo;, i)&amp;rdquo; 调用时, i 的值已经确定了, 因此相当于 defer fmt.Println(&amp;ldquo;Deferred print:&amp;ldquo;, 1) 了.</description>
    </item>
    
  </channel>
</rss>