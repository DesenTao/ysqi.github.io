<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>虞双齐Golang开发</title>
    <link>https://yushuangqi.com/tags/node.js.xml</link>
    <description>在 虞双齐Golang开发上关于的内容</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>devysq@gmail.com (虞双齐)</managingEditor>
    <webMaster>devysq@gmail.com (虞双齐)</webMaster>
    <atom:link href="/tags/node.js.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GNVM--Windows下Node_js多版本管理器</title>
      <link>https://yushuangqi.com/blog/2016/gnvm----windowsxia-node_jsduo-ban-ben-guan-li-qi.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:51 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/gnvm----windowsxia-node_jsduo-ban-ben-guan-li-qi.html</guid>
      <description>gnvm，是一个 windows 下 简单的 Node.js 多版本管理器，类似 nvmw | nodist 等。
原本是 14 年 为了学习 Go 语言 而建立的一个项目，后来一直没有维护，结果前阵子，陆陆续续的收到了 很多 issues ，既然有人用，本着不想挖坑不填的想法，又继续更新了。
先给个运行效果： c:\&amp;gt; gnvm install latest 1.0.0-x86 1.0.0-x64 5.0.0 Start download Node.js versions [5.10.1, 1.0.0, 1.0.0-x86, 5.0.0]. 5.10.1: 18% [=========&amp;gt;__________________________________________] 4s 1.0.0: 80% [==========================================&amp;gt;_________] 40s 1.0...: 50% [==========================&amp;gt;_________________________] 30s 5.0.1: 100% [==================================================&amp;gt;] 20s End download. c:\&amp;gt; gnvm ls 5.1.1 -- latest 1.0.0 1.0.0 -- x86 5.0.0 -- global c:\&amp;gt; gnvm use latest Set success, current Node.</description>
    </item>
    
    <item>
      <title>谷歌:谁拥有下一代云平台的DNA？机器学习和云端智能是云的未来</title>
      <link>https://yushuangqi.com/blog/2016/gu-ge-shei-yong-you-xia-yi-dai-yun-ping-tai-de-dnaji-qi-xue-xi-he-yun-duan-zhi-neng-shi-yun-de-wei.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:53 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/gu-ge-shei-yong-you-xia-yi-dai-yun-ping-tai-de-dnaji-qi-xue-xi-he-yun-duan-zhi-neng-shi-yun-de-wei.html</guid>
      <description>在“NEXT2016”会议上，Google的Eric Schmidt提到Google所占最大的优势之一就是站在云计算下一个十年的前沿。它不是基础设施或者软件，也不像纯数据一样简单。
Crowdsourced 智能，是个进化，可以创建更加智能的从上到下各级用户都可以利用、重新训练、改变、为自己目的输出的系统。这一切将会点燃新一代云平台的未来发展方向。
Crowdsourcing数据的这个概念会令训练变得更好、变得更加智能、范围更加宽广，这也是谷歌在接下来云计算的十年里有竞争力的核心优势，Schmidt说道。“我坚信快速评估模型，谷歌云计算，机器学习，以及crowdsourcing将会是每一个IPO的基础，在下一个5年里成为赢家。”这会是一个跟产生应用程序的过程很相似的评估——将用户眼下真正需要的智能创建然后放进去，在这背后还有着底层基础设施，很多这样的抽象层次才会让用户有无缝体验。Schmidt比较说，这跟汽车产业十分相像——从早期的时候，到离合器，再到未来的自驾。
“Google云平台跟未来要发生的简直同步到完美。这个平台还不是终结，而是底层——总有些&amp;rdquo;什么&amp;rdquo;在这上面。这个“什么”就是机器学习，包括狭义的AI和广义的AI，就是下一代的转化。编程范型改就这样改变了。除了让电脑编程，还可以让电脑做你想让它做的事情。这是编程的一个基本变化。”
Schmidt说，为这次转变作的最好的准备就是在Linux的上面、Google云平台上面和Kubernetes上面开始创建。从开发角度来说，是为了可扩展的、便携的像Go，Python，node.js，java这样的语言结合工作，以及创建在Google App Engine上面。但是在这个清单再往上，就是应用TensorFlow的问题了，这将是未来5年内谷歌机器学习和分析策略的核心（他估计，许多其它企业也一样）。
关于TensorFlow 请点击这里
随着谷歌新机器学习平台的首次展示，等于在这片沙地上首次插入了这面旗帜，后续会有比如AWS，Microsoft的Azure等等有着高级机器学习和云基础设施的公司比如IBM纷至沓来。因为不像其它那些公司，Google拥有自身已有的而很多其它公司所没有的诸如照片，声音和文本的服务为资源来做crowdsource服务，来促进下图列出来的这些服务。
Jeff Dean，谷歌System Infrastructure组，也是Google Brain项目主导人说道：“在过去的几年里，我们已经将机器学习创建塞入我们做的每件事情中。” 这就是为什么公司安卓语音识别系统运行得如此好，也是为什么他们的翻译服务如此深远，相对准确，也是为什么照片脸和对象识别与分类可以做到无缝。crowdsourced服务，就是Google提供最丰富的档案和流媒体数据来做更加智能的机器，并且更加高级的深层学习能力。针对其他之前由硬件统治见长的云，Google将会采取更加温和的方法（通过软件）来抗衡。
安装了TensorFlow来允许复杂的深层学习作为全面管理服务，云计算未来的十年会是非常不同的，更不用说下一代将是数据分析的天下。我们已经从需要用同样的旧工具（一些新的框架比如MapReduce和Hadoop）来处理很多数据得出方法的时代解放出来，通过让数据自己计算来实现“量子跳跃”，至少理论上是这样的。而且那会是一件大事——一件可以威胁到目前云霸权地位的大事，谷歌可能会全栈关注以及拥有crowdsource－able服务。
即使TensorFLow只是在2015年底刚出现，Schmidt坚信这是下一代谷歌用复杂的分析工作负载为大型企业提供更加深层大范围的服务的能力。这是下一个应用程序和云应用范例浪潮的开始——而且很可能，对于谷歌自己作为推动的地位以及在500强公司的推动下，500强公司和AWS也会迈出他们的第一步。
不久之前，就像我们在AWS的第一个十年快到之前评论的那样，即使是在弹性非常大的应用程序里，重点也仍然在基础设施的进化上，而且与之相关的工具和服务都是互相挂钩的。云的头十年是强烈植根于这些基础之上在考量的：考量安全，网络，当然还有所需的大型主机来推动呈爆发增长的用户应用程序。毋庸置疑，AWS走在云平台前沿，这是众所周知的，随着附加的元素通过其它一样缺乏初始动机的公司也开始出租备用基础设备（相比较于仅仅只是为主持基于云端服务来创建数据中心来说）。
AWS之前所有的努力都值得被认可，然而现在AWS和他的云计算领域同伴面临的，是安装了crowdsourced数据、机器学习和深层次学习框架并用它来做一些高层次的业务，支持新的已经存在的服务；在这些服务上，谷歌的定位是让用户获得超值的服务。这一年会是谷歌云在某种程度上找到它的立足点，之前它并没有跟大规模企业合作过，这些企业之前通过Amazon的服务对公有云（通常通过混合模型）有了初步的尝试，需要一些过程来信服来摆脱最初经历的那些恐惧、成本、冒险，从而从纯粹云的基础设施来经历再一次的转变。
可以让大家刮目相看的云平台一定不再是硬件设施了。这其实是差不多的一个过程，可以预料到，谷歌会采取进一步努力来支持谷歌可提供的云端服务“实例”，就像AWS之前的过程一样，AWS在存储、加速、CPU和网络选项多方面都提供服务来抢占市场。核心竞争力一定是来自于一个对大多数公司来说很难做到的事情——下一代智能分析能力，可以做到如此智能、协调，这会是扰动原有云生态布局，在未来主导游戏规则改变的事情，至少在谷歌眼里是这样。
原文链接
（如果需要转载，请联系我们哦，尊重知识产权人人有责）</description>
    </item>
    
    <item>
      <title>nsqjs客户端的部署</title>
      <link>https://yushuangqi.com/blog/2016/nsqjske-hu-duan-de-bu-shu.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:35 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/nsqjske-hu-duan-de-bu-shu.html</guid>
      <description>因为公司在业务中需要用到消息队列产品，我选用了基于golang开源的nsq产品，记录下我遇到的那些部署中的坑。
首先安装nsq，这个没什么好说的，我是直接在官网下载bin文件，直接部署的，环境是centOS 6.7，安装在/opt/nsq-0.3.7.linux-amd64.go1.6目录下；
其次是安装nodejs，我安装的是v6.1.0版本，这步也没什么好讲；
然后安装nsqjs这个遇到了些坑，这里先记录下
1、要看下gcc的版本；
$ gcc -v使用内建 specs。 目标：x86_64-redhat-linux 配置为：../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux 线程模型：posix gcc 版本 4.4.7 20120313 (Red Hat 4.4.7-16) (GCC)  2、因为node.js 4升级了v8引擎，要求gcc的版本在4.8以上，所以要先更新gcc版本；
$ rpm -ivh https://www.softwarecollections.org/en/scls/rhscl/devtoolset-3/epel-6-x86_64/download/rhscl-devtoolset-3-epel-6-x86_64.noarch.rpm $ yum install devtoolset-3-gcc-c++ 临时使用最新版gcc： $ scl enable devtoolset-3 bash 系统默认使用gcc-4.9 $ echo &amp;quot;source /opt/rh/devtoolset-3/enable&amp;quot; &amp;gt;&amp;gt;/etc/profile  3、然后安装nsqjs，为了项目的复用，我就用了全局安装，然后把nsqjs复制到项目的node_modules中就可以了；</description>
    </item>
    
    <item>
      <title>深入体验bashonwindows在windows上搭建原生的linux开发环境酷！</title>
      <link>https://yushuangqi.com/blog/2016/shen-ru-ti-yan-bash-on-windowszai-windowsshang-da-jian-yuan-sheng-de-linuxkai-fa-huan-jing-ku-.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:16 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/shen-ru-ti-yan-bash-on-windowszai-windowsshang-da-jian-yuan-sheng-de-linuxkai-fa-huan-jing-ku-.html</guid>
      <description>今年微软Build 2016大会最让开发人员兴奋的消息之一，就是在Windows上可以原生运行Linux bash，对开发人员来说，这是一个喜闻乐见的消息。
1 安装 你必须安装开发者预览版本，才能使用windows的linux subsystem功能。
 首先打开你的Windows 10的设置，在&amp;rdquo;更新和安全&amp;rdquo;选项中（我的机器是英文操作系统，但中文操作系统类似），选择&amp;rdquo;开发者&amp;rdquo;，然后选择&amp;rdquo;开发者模式&amp;rdquo;：
 在Windows 更新和安全选项中，选择&amp;rdquo;Windows 更新&amp;rdquo;，在&amp;rdquo;更新设置&amp;rdquo;中选择高级选项，你必须打开&amp;rdquo;内部预览版本&amp;rdquo;选项，并且将内部预览的级别设置为最快：
 在&amp;rdquo;设置&amp;rdquo;-&amp;gt;&amp;ldquo;系统&amp;rdquo;选项中，查看当前系统信息，你的OS版本必须是14316，如果不是这个版本，请运行在线升级，升级到这个版本：
 升级完成后，打开&amp;rdquo;控制面板&amp;rdquo;-》&amp;rdquo;程序&amp;rdquo;，选择&amp;rdquo;打开或者关闭Windows特性&amp;rdquo;，找到Windows Subsystem for Linux(beta)点选并确定，系统会下载更新并提示重启机器：
 重启完成后，进入命令行程序，激动人心的时刻来临了，在命令行下敲bash，会提示你是否继续，选择yes，系统会安装Ubuntu文件系统等待完成后，系统会切换到你熟悉的Linux bash模式，试试你熟悉的ls等命令：
 打开Windows菜单，你会发现系统中多了一个Ubuntu的图标，这个就是bash on Ubuntu on Windows：
 简单测试一下python，perl等语言，发现已经装好了，当然，这个就是Ubuntu的bash，你可以安装Java，Ruby等等：
  下面来实际测试下ubuntu on windows环境！
2 系统检测和更新 2.1 版本检测 运行 uname -a 结果如下
webmaster@FEKETERIGO-PC:~$ uname -a Linux FEKETERIGO-PC 3.4.0+ #1 PREEMPT Thu Aug 1 17:06:05 CST 2013 x86_64 x86_64 x86_64 GNU/Linux webmaster@FEKETERIGO-PC:~$  运行 lsb_release -a 结果如下</description>
    </item>
    
    <item>
      <title>基于HTTP标准协议的API接口设计规范构思</title>
      <link>https://yushuangqi.com/blog/2016/ji-yu-httpbiao-zhun-xie-yi-de-apijie-kou-she-ji-gui-fan-gou-sai.html</link>
      <pubDate>Sat, 31 Dec 2016 11:32:42 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/ji-yu-httpbiao-zhun-xie-yi-de-apijie-kou-she-ji-gui-fan-gou-sai.html</guid>
      <description>https://segmentfault.com/a/
开发规范  版本控制git
 开发流程git flow
  接口 请求方式 url 动作 中文说明
GET /resources/ list 列表 POST /resources/ create 创建 GET /resources/:id retrieve 详细 PUT /resources/:id update 更新 PATCH /resources/:id partial_update 部分更新 DELETE /resources/:id destroy 删除
数据  请求支持form-date,json,x-www-form-urlencode
 返回格式统一为json
 一个请求对应一个serializer
  错误  错误信息包含在返回内容里
 不同的错误对应不同的错误信息代码
 http错误码按照标准用法使用
  认证  jwt
 token
 oauth2
  权限  以中间件形式作为权限鉴别插件，根据http请求格式直接判断权限
 用户登录成功时，将用户信息与权限信息缓存保证效率</description>
    </item>
    
  </channel>
</rss>