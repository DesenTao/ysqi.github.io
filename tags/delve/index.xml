<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>虞双齐的博客</title>
    <link>https://yushuangqi.com/tags/delve.xml</link>
    <description>在 虞双齐的博客上关于的内容</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>ysqi@yushuangqi.com (虞双齐)</managingEditor>
    <webMaster>ysqi@yushuangqi.com (虞双齐)</webMaster>
    <atom:link href="/tags/delve.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>使用delve调试golang程序</title>
      <link>https://yushuangqi.com/blog/2016/shi-yong--delve-diao-shi--golang-cheng-xu.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:32 +0800</pubDate>
      <author>ysqi@yushuangqi.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/shi-yong--delve-diao-shi--golang-cheng-xu.html</guid>
      <description> 安装 delve 官方的文档已经很全了，参考这里（github）安装。Mac OSX 比较麻烦，需要搞定证书。
断点和变量打印 delve 装好之后就可以直接在命令行使用 dlv 命令了。
查看可用的命令
dlv -h  看帮助信息可知：支持用 dlv attach 的方式调试正在运行的进程，支持 dlv connect 链接到网络端口调试。这里先用最简单的 dlv debug 调试。
dlv debug main.go  然后会进入调试模式，此时 help 可以看到支持的命令。
(dlv) b main.go:16 #在 main.go 的第 16 行设置断点。 (dlv) bp #查看当前所有断点 (dlv) c #运行到下一个断点或者程序结尾 (dlv) p a #打印变量 a 的值 (dlv) n #单步执行代码 (dlv) set a=1 #设置变量a 的值  </description>
    </item>
    
  </channel>
</rss>