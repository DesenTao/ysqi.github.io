<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>虞双齐Golang开发与SRE运维</title>
    <link>https://yushuangqi.com/tags/%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86.xml</link>
    <description>在 虞双齐Golang开发与SRE运维上关于的内容</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>devysq@gmail.com (虞双齐)</managingEditor>
    <webMaster>devysq@gmail.com (虞双齐)</webMaster>
    <atom:link href="/tags/%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>统一配置管理工具confd</title>
      <link>https://yushuangqi.com/blog/2016/tong-yi-pei-zhi-guan-li-gong-ju-confd.html</link>
      <pubDate>Sat, 31 Dec 2016 11:34:09 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/tong-yi-pei-zhi-guan-li-gong-ju-confd.html</guid>
      <description>confd Github: https://github.com/sumory/confd
confd是一个统一配置管理工具，目前仍在开发中，基于本地文件存储的部署方式已经可以用于生产环境中。
你可以用它：
 统一管理各种配置文件，配置文件模板和数据是分离的，可各自单独管理
 动态修改配置属性，然后重新生成相关的配置文件
 提供cli方式修改数据
  Features  [x] 基础解析：配置文件使用toml格式，模板数据分离
 [x] 多种存储支持：local file、redis、zookeeper
 [x] 两种运行模式：Debug或Daemon
 [x] cli工具：修改store，批量更新配置
 [ ] 更友好的交互方式，比如通过web界面
 [ ] 分离server和client，提供客户端cli或API供拉取指定配置
 [ ] 加密支持：store中存储的配置可加密，防止泄露
  Usage 安装
#假设安装路径为/data/server/confd #go get获取依赖的第三方库 sh build.sh linux /data/server/confd #执行以上构建脚本后，在docs目录下生成了安装所需的文件 #若build.sh增加了参数$2，则默认加载$2/data/config.toml作为confd运行所需的配置文件 cd docs sh install.sh /data/server/confd cd /data/server/confd #注意修改${path}/data/config.toml里的ConfDir和ConnectAddr，前缀为/data/server/confd #然后使用confd、confd-cli即可  使用
. ├── confd ├── confd-cli ├── data │ ├── config.</description>
    </item>
    
  </channel>
</rss>