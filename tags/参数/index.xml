<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>极客虞双齐</title>
    <link>https://yushuangqi.com/tags/%E5%8F%82%E6%95%B0.xml</link>
    <description>在 极客虞双齐上关于的内容</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>devysq@gmail.com (虞双齐)</managingEditor>
    <webMaster>devysq@gmail.com (虞双齐)</webMaster>
    <atom:link href="/tags/%E5%8F%82%E6%95%B0.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>go-可变参数</title>
      <link>https://yushuangqi.com/blog/2016/go-ke-bian-can-shu.html</link>
      <pubDate>Sat, 31 Dec 2016 11:33:26 +0800</pubDate>
      <author>devysq@gmail.com (虞双齐)</author>
      <guid>https://yushuangqi.com/blog/2016/go-ke-bian-can-shu.html</guid>
      <description>https://segmentfault.com/a/
今天在尝试用go写一个简单的orm的时候 发现 在调用可变参数函数时，不是总能使用省略号将一个切片展开，有时候编译器可能会报错 再此用几个简单的例子作为说明
当不太确定数据类型的时候我们通常采用空接口
tests1(789) fmt.Println(&amp;quot;-------------&amp;quot;) tests1(&amp;quot;789&amp;quot;) func tests1(arg interface{}) { fmt.Println(&amp;quot;value:&amp;quot;, arg) fmt.Println(&amp;quot;type:&amp;quot;, reflect.TypeOf(arg).Name()) }  输出结果
value: 789 type: int ------------- value: 789 type: string  在使用相同类型的可变入参时
tests([]string{&amp;quot;4&amp;quot;, &amp;quot;5&amp;quot;, &amp;quot;6&amp;quot;}...) func tests(args ...string) { for i, v := range args { fmt.Println(i, &amp;quot;----&amp;quot;, v) } }  输出结果
0 ---- 4 1 ---- 5 2 ---- 6  当使用interface{}作为可变入参时
func testParams(args ...interface{}) { for i, v := range args { if s, ok := v.</description>
    </item>
    
  </channel>
</rss>